{"version":3,"sources":["seaSonDisplay.js","spinner.js","index.js"],"names":["SeaSonDisplay","props","console","log","lat","month","date","Date","season","getMonth","text","icon","react_default","a","createElement","className","concat","Spinner","message","App","_Component","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","err","window","navigator","geolocation","getCurrentPosition","position","setState","coords","latitude","inherits","createClass","key","value","seaSonDisplay","spinner","Component","ReactDOM","render","src_App","document","querySelector"],"mappings":"kMA8BeA,MAjBf,SAAuBC,GACrBC,QAAQC,IAAIF,EAAMG,KAClB,IAZiBA,EAAIC,EAYjBC,EAAO,IAAIC,KACTC,GAbWJ,EAaQH,EAAMG,KAbVC,EAacC,EAAKG,YAZ/B,GAAKJ,EAAM,EACXD,EAAI,EAAI,SAAS,SAEjBA,EAAI,EAAE,SAAS,UAUlBM,EAAgB,WAATF,EAAkB,eAAe,aACxCG,EAAgB,WAATH,EAAkB,YAAY,MAE3C,OADAN,QAAQC,IAAI,aAAaK,GAEvBI,EAAAC,EAAAC,cAAA,OAAKC,UAAS,GAAAC,OAAKR,IACjBI,EAAAC,EAAAC,cAAA,MAAIC,UAAS,kBAAb,IAAmCL,GACnCE,EAAAC,EAAAC,cAAA,KAAGC,UAAS,qBAAAC,OAAuBL,EAAvB,WACZC,EAAAC,EAAAC,cAAA,KAAGC,UAAS,sBAAAC,OAAwBL,EAAxB,aCVHM,MAZf,SAAiBhB,GACb,OACIW,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBACZd,EAAMiB,8CCDlB,IAAMC,EAAb,SAAAC,GACI,SAAAD,EAAYlB,GAAO,IAAAoB,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACfE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMvB,KACD2B,MAAQ,CAAExB,IAAK,KAAMyB,IAAK,MAC/BC,OAAOC,UAAUC,YAAYC,mBACzB,SAACC,GACGhC,QAAQC,IAAI+B,GACZb,EAAKc,SAAS,CACV/B,IAAK8B,EAASE,OAAOC,YAG7B,SAACR,GACG3B,QAAQC,IAAI0B,GACZR,EAAKc,SAAS,CACVN,IAAKA,EAAIX,YAbNG,EADvB,OAAAC,OAAAgB,EAAA,EAAAhB,CAAAH,EAAAC,GAAAE,OAAAiB,EAAA,EAAAjB,CAAAH,EAAA,EAAAqB,IAAA,SAAAC,MAAA,WAoBQ,OAAIjB,KAAKI,MAAMxB,MAAQoB,KAAKI,MAAMC,IACtBjB,EAAAC,EAAAC,cAAC4B,EAAD,CAAetC,IAAKoB,KAAKI,MAAMxB,OACjCoB,KAAKI,MAAMxB,KAAOoB,KAAKI,MAAMC,IAC3BjB,EAAAC,EAAAC,cAAA,sBAAcU,KAAKI,MAAMC,KAE1BjB,EAAAC,EAAAC,cAAC6B,EAAD,CAASzB,QAAQ,sCAzBpCC,EAAA,CAAyByB,aA6BVzB,YACf0B,IAASC,OAAOlC,EAAAC,EAAAC,cAACiC,EAAD,MAASC,SAASC,cAAc","file":"static/js/main.1e361b21.chunk.js","sourcesContent":["import React from 'react'\nimport './SeasonDisplay.css'\n\nfunction getSeason(lat,month){\n  if(month>2 && month<9){\n    return lat>0 ? \"summer\":\"winter\"\n  }else{\n    return lat>0?\"winter\":\"summer\"\n\n  }\n\n}\n\nfunction SeaSonDisplay(props) {\n  console.log(props.lat)\n  let date = new Date()\n  const season = getSeason(props.lat,date.getMonth()) \n  const text = season===\"winter\"?\"it's chilly \":\"it's hottt\"\n  const icon = season===\"winter\"?\"snowflake\":\"sun\"\n  console.log(\"season is \",season)\n  return (\n    <div className={`${season}`}>\n      <h3 className={`season-display`}> {text}</h3>\n      <i className={`massive icon-left ${icon} icon`}/>\n      <i className={`massive icon-right ${icon} icon`}/>\n\n    </div>\n  )\n}\n\nexport default SeaSonDisplay\n","import React from 'react'\n\nfunction Spinner(props) {\n    return (\n        <div>\n            <div className=\"ui active dimmer\">\n                <div className=\"ui big text loader\">\n                  {props.message}\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Spinner\n","import ReactDOM from 'react-dom'\nimport React, { Component } from 'react'\nimport SeaSonDisplay from './seaSonDisplay'\nimport Spinner from './spinner'\n\n\nexport class App extends Component {\n    constructor(props) {\n        super(props)\n        this.state = { lat: null, err: null }\n        window.navigator.geolocation.getCurrentPosition(\n            (position) => {\n                console.log(position)\n                this.setState({\n                    lat: position.coords.latitude\n                })\n            },\n            (err) => {\n                console.log(err)\n                this.setState({\n                    err: err.message\n                })\n            }\n        )\n    }\n    render() {\n        if (this.state.lat && !this.state.err)\n            return (<SeaSonDisplay lat={this.state.lat}/>)\n        else if (!this.state.lat && this.state.err)\n            return (<h2>Latitude:{this.state.err}</h2>)\n\n            return(<Spinner message=\"Please Allow Location Access.\"/>)\n    }\n}\n\nexport default App\nReactDOM.render(<App />, document.querySelector('#root'))"],"sourceRoot":""}